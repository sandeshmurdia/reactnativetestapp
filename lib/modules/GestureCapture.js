var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _react=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _SnapshotCapture=_interopRequireDefault(require("./SnapshotCapture"));var _constants=require("../utils/constants.js");var _asyncStorage=_interopRequireDefault(require("@react-native-async-storage/async-storage"));var _helper=require("../utils/helper.js");var _ApiCall=_interopRequireDefault(require("../utils/ApiCall.js"));var _jsxRuntime=require("react/jsx-runtime");var _this=this,_jsxFileName="/Users/sandesh/Desktop/zipy-mobilesdk-reactnative/src/modules/GestureCapture.js";function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if("default"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var ZIPY_LABEL='zipy-label';var DOUBLE_TAP_DELAY=200;var LONG_PRESS_DELAY=400;var touchEventStyles=_reactNative.StyleSheet.create({wrapperView:{flex:1}});var GestureCapture=function GestureCapture(_ref){var _ref$maxComponentTree=_ref.maxComponentTreeSize,maxComponentTreeSize=_ref$maxComponentTree===void 0?20:_ref$maxComponentTree,children=_ref.children,labelName=_ref.labelName;var snapshotRef=(0,_react.useRef)(null);var tracingIntegrationRef=(0,_react.useRef)(null);var _useState=(0,_react.useState)(null),_useState2=(0,_slicedToArray2.default)(_useState,2),tapTimeout=_useState2[0],setTapTimeout=_useState2[1];var _useState3=(0,_react.useState)(null),_useState4=(0,_slicedToArray2.default)(_useState3,2),longPressTimeout=_useState4[0],setLongPressTimeout=_useState4[1];var _useState5=(0,_react.useState)(0),_useState6=(0,_slicedToArray2.default)(_useState5,2),tapCount=_useState6[0],setTapCount=_useState6[1];var logTouchEvent=(0,_react.useCallback)(function(){var _ref2=(0,_asyncToGenerator2.default)(function*(componentTreeNames,activeLabel,displayTag,tapType){try{eventAt=yield(0,_helper.formatTimestamp)(Date.now());var logData={eventType:tapType,createdAt:Date.now(),viewName:`${activeLabel?`Label : ${activeLabel} ${displayTag}`:`Element: ${displayTag}`}`,viewText:`${componentTreeNames}`,eventAt:`${eventAt}`};var sessionid=yield _asyncStorage.default.getItem("session_id");var req_body={message:{events:logData,eu_info_id:"N/A",eue_id:"0",euz_id:"0",ip:"",rel_ver:"N/A",timezone:"IST",key:api_key,sdk_ver:_constants.SDK_VERSION,src:SRC,src_tech_stack:_constants.TECH_STACK,s_id:`${sessionid}`,event_type:_constants.MESSAGE}};yield(0,_ApiCall.default)(logData,req_body);}catch(error){}});return function(_x,_x2,_x3,_x4){return _ref2.apply(this,arguments);};}(),[]);var handleSingleTap=function handleSingleTap(componentTreeNames,activeLabel,displayTag){if(!longPressTimeout){logTouchEvent(componentTreeNames,activeLabel,displayTag,_constants.SINGLE_TAP);}};var handleDoubleTap=function handleDoubleTap(componentTreeNames,activeLabel,displayTag){logTouchEvent(componentTreeNames,activeLabel,displayTag,_constants.DOUBLE_TAP);};var handleLongPress=function handleLongPress(componentTreeNames,activeLabel,displayTag){logTouchEvent(componentTreeNames,activeLabel,displayTag,_constants.LONG_TAP);};var onTouchStart=(0,_react.useCallback)(function(){var _ref3=(0,_asyncToGenerator2.default)(function*(e){if(!e._targetInst){return;}var currentInst=e._targetInst;var activeLabel;var activeDisplayName;var componentTreeNames=[];while(currentInst&&maxComponentTreeSize&&componentTreeNames.length<maxComponentTreeSize){var props=currentInst.memoizedProps;var sentryLabel=props==null?void 0:props[ZIPY_LABEL];var labelValue=void 0;if(typeof labelName==='string'){labelValue=props==null?void 0:props[labelName];}if(sentryLabel){if(!activeLabel){activeLabel=sentryLabel;}componentTreeNames.push(sentryLabel);}else if(typeof labelValue==='string'){if(!activeLabel){activeLabel=labelValue;}componentTreeNames.push(labelValue);}else if(currentInst.elementType){var _currentInst=currentInst,elementType=_currentInst.elementType;if(elementType.displayName){if(!activeDisplayName){activeDisplayName=elementType.displayName;}componentTreeNames.push(elementType.displayName);}}currentInst=currentInst.return;}var finalLabel=activeLabel||'';var displayTag=activeDisplayName;var longPressTimeout=setTimeout(function(){if(longPressTimeout){clearTimeout(tapTimeout);setLongPressTimeout(null);}handleLongPress(componentTreeNames,finalLabel,displayTag);setTapTimeout(null);setLongPressTimeout(0);},LONG_PRESS_DELAY);setLongPressTimeout(longPressTimeout);if(tapTimeout){clearTimeout(tapTimeout);setTapTimeout(null);setTapCount(0);handleDoubleTap(componentTreeNames,finalLabel,displayTag);}else{setTapCount(1);var timeout=setTimeout(function(){handleSingleTap(componentTreeNames,finalLabel,displayTag);setTapTimeout(null);setTapCount(0);},DOUBLE_TAP_DELAY);setTapTimeout(timeout);}if(tracingIntegrationRef.current){tracingIntegrationRef.current.startUserInteractionTransaction({elementId:activeLabel});}});return function(_x5){return _ref3.apply(this,arguments);};}(),[maxComponentTreeSize,logTouchEvent,labelName,tapTimeout,tapCount]);var onTouchEnd=(0,_react.useCallback)(function(){if(longPressTimeout){clearTimeout(longPressTimeout);setLongPressTimeout(null);}},[longPressTimeout]);return(0,_jsxRuntime.jsx)(_SnapshotCapture.default,{ref:snapshotRef,style:touchEventStyles.wrapperView,children:(0,_jsxRuntime.jsx)(_reactNative.View,{style:touchEventStyles.wrapperView,onTouchStart:onTouchStart,onTouchEnd:onTouchEnd,children:children})});};var _default=exports.default=GestureCapture;